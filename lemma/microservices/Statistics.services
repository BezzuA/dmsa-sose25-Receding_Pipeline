import datatypes  from "../../domain/Statistics.data"          as StatsDomain
import technology from "../../technology/JavaSpring.technology"  as JavaSpring
import technology from "../../technology/Protocols.technology"   as Protocols

@technology(JavaSpring)
@technology(Protocols)
@sync(Protocols::_protocols.rest)
public functional microservice com.parkandcharge.statisticsservice.StatisticsService {

    @endpoints(Protocols::_protocols.rest: "/api/statistics";)
    interface StatisticsApi {

        ---               /* owner-specific query */
        Get statistics for an owner
        @required ownerId
        ---
        @endpoints(Protocols::_protocols.rest: "/owner/{ownerId}";)
        @JavaSpring::_aspects.GetMapping
        getStatsByOwner(
            @JavaSpring::_aspects.PathVariable
            sync in  ownerId : long,
            sync out stats   : StatsDomain::OwnerStatistics
        );

        ---
        Get statistics for all owners
        ---
        @JavaSpring::_aspects.GetMapping
        getAllStats(
            sync out allStats : StatsDomain::OwnerStatisticsList
        );

        ---
        Update statistics (increment totals)
        ---
        @endpoints(Protocols::_protocols.rest: "/update";)
        @JavaSpring::_aspects.PostMapping
        updateStatistics(
            @JavaSpring::_aspects.RequestBody
            sync in request : StatsDomain::API.UpdateStatisticsRequest
        );
    }
}
